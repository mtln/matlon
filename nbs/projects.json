[
    {
        "title": "Patient",
        "year_start": 1991,
        "year_end": 1994,
        "quote": "Early DOS software for patient management",
        "description": "My first software that was used productively was called 'Patient'. I wrote it as a teenager in Turbo Pascal for my mother, who, in addition to being a housewife, also worked part-time as a self-employed physiotherapist. The DOS application was multicolored and could be operated with a mouse. We had an Intel 80386 DX 20 MHz computer with a 1 GB hard drive and a simple dot-matrix printer. With my patient management software, one could not only schedule appointments and do the accounting, but also directly fill out the yellow forms that had to be submitted to the disability insurance (IV) for billing. At the time, my mother was probably the only physiotherapist who sent forms to the insurance not handwritten but neatly filled out by a printer ðŸ˜€. \n\n ![Patient menu screenshot](patient1.jpg) \n\nThe completely exaggerated title 'Physikalisch-Therapeutisches Institut Ruth KrÃ¤mer & Co.' was, of course, meant as a family insider joke.  \n\n ![Patient detail screenshot](patient2.jpg)"

    },
    {
        "title": "Ohr",
        "year_start": 1992,
        "year_end": 1994,
        "quote": "Ear trainer for musicians",
        "description": "Music was always my great love. After high school, I went to the Jazz School in Lucerne, but later decided to pursue a degree in computer science at ETH Zurich. Ear training is essential in music, so I programmed 'Ohr', a software for ear training, which allowed users to practice recognizing intervals, chords and their inversions, scales, and so on. To make it possible to practice on the go (laptops didn't exist yet), the software included a feature for creating exercises that could be recorded directly onto cassette. In parallel, the solutions were printed out so that one could practice with a Walkman and a sheet of paper wherever they wanted. The Sound Blaster card was the first to support speech synthesis and could be used with a text-to-speech command-line tool `c:\\sb\\sbtalker\\say.exe`. So, to keep track during practice, every 10 exercises were announced.  \n\n ![Soundblaster](ohr1.jpg)"

    },
    {
        "title": "Teltax",
        "year_start": 1995,
        "year_end": 1999,
        "quote": "Dial-In modem costs calculator and splitter",
        "description": "To access the internet back then, you had to dial in via a modem over the phone line. There was a basic charge for establishing the connection and a per-minute fee with three different time-based pricing levels. Internet costs could quickly become very high, and if you lived in a shared apartment or worked remotely for an employer, you needed to know for each 'internet session' when it happened, how long it lasted, and who would be responsible for paying at the end of the month.\n\nThat's exactly why I wrote Teltax. It was activated each time a modem connection ended, allowing you to specify whose account the costs should be charged to. The details were read from the technical log of the Win95 modem driver (e.g., `c:\\win95\\ModemLog_Zeus 336E External 33600 Fax Modem.txt`). Then, the costs were calculated based on the three different price levels and written into a log file. At the end of the billing period, a total cost per user was calculated. Additionally, the data volume was analyzed, and the cost per megabyte was calculated. Since charges were based on time rather than data volume back then, the goal was, of course, to keep the cost per megabyte as low as possible by truly using the connection and not keeping it open for too long.\n\n ![Teltax summary screenshot](teltax1.jpg)"
    },
    {
        "title": "PublicSecrets",
        "year_start": 1997,
        "year_end": 2007,
        "quote": "The _really_ social network before social networks",
        "description": ""

    },
    {
        "title": "WiiMIDIi",
        "year_start": 2007,
        "year_end": 2008,
        "quote": "Using a Nintendo Wiimote for guitar motion sensing and converting accelerometer data to MIDI",
        "description": "For our concerts with [Amtsbladt](http://www.amtsbladt.ch), a Swiss electro-pop duo where I was responsible for composition and music, and my friend Phil handled lyrics and vocals, I wrote software to convert the movements of the guitar neck into MIDI signals. I had attached a Wiimote to the guitar head. With quick movements in different directions, I could trigger samples, and with slower movements, I could control parameters of the guitar effects. In addition, I could use the Wiimote buttons to control Ableton Live (start tracks). Thereâ€™s nothing more boring at concerts than guys on stage sitting behind a laptop. As an audience member, you have no idea if what they're doing has anything to do with what you're hearing or if they're just checking their emails or stock prices. Thatâ€™s why I was behind the guitar and not behind a computer.  \n\n For the Guitar Rig Hero Contest by Native Instruments, I demonstrated my setup in a rather silly video ðŸ¤£.\n\n[![Watch WiiMIDIi demo on YouTube](https://img.youtube.com/vi/8vSY9S_ypdI/0.jpg)](https://www.youtube.com/watch?v=8vSY9S_ypdI)"

    },
    {
        "title": "Gschichtefritz",
        "year_start": 2009,
        "quote": "Audio stories with songs for children",
        "description": ""

    },
    {
        "title": "Gschichtefritz App",
        "year_start": 2020,
        "quote": "Gschichtefritz audiobook player app for iOS and Android",
        "description": "Gschichtefritz offered MP3s from the very beginning. However, with the rise of streaming services, it became clear that customers were finding it increasingly challenging to download MP3s and transfer them to iPods, tablets, or smartphones. To address this issue, I developed a player app in 2020. The free [Gschichtefritz App](https://gschichtefritz.ch/page/app) lets you download all your stories, so you can listen to them offline whenever you want. Itâ€™s also designed to be easily operated by young children, even those who canâ€™t read yet.\n\n**Framework:** Xamarin, since 2023: Maui  \n**Programming Language:** C#  \n**Platforms:** iOS and Android\n\n ![Gschichtefritz App Screenshot](gschichtefritzapp1.jpg)",
        "related_project_titles": ["Gschichtefritz"]

    },
    {
        "title": "gschichtefritz.ch legacy",
        "year_start": 2009,
        "year_end": 2023,
        "quote": "CRM, shop, CD burner automation, accounting, and more",
        "description": "",
        "related_project_titles": ["Gschichtefritz", "Gschichtefritz App"]
    },
    {
        "title": "gschichtefritz.ch current",
        "year_start": 2024,
        "quote": "Shop and App backend",
        "description": "",
        "related_project_titles": ["Gschichtefritz", "Gschichtefritz App"]
    }
    
]
